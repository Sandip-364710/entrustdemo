                   new signup.html 
				   
				   
				   <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signup</title>
    <link href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css" rel="stylesheet">
</head>
<body>
    <nav class="container-fluid">
        <ul>
            <li><strong><a href="{{ url_for('welcome') }}">Home</a></strong></li>
        </ul>
        <ul>
            <li><a href="{{ url_for('login') }}">Login</a></li>
            <li><a href="#about-us">About</a></li>
        </ul>
    </nav>

    <main class="container" style="padding: 0;">
        <div class="grid">
            <section class="profile-card">
                <h2>Signup</h2>
                <form method="post" action="{{ url_for('signup') }}">
                    <div class="form-group">
                        <label for="username">Username:</label>
                        <input type="text" id="username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-group">
                        <label for="businessType">Choose account type:</label><br>
                        <input type="radio" id="individual" name="businessType" value="individual" checked>
                        <label for="individual">Individual</label><br>
                        <input type="radio" id="business" name="businessType" value="business">
                        <label for="business">Business</label><br>
                    </div>

                    <!-- Individual signup fields -->
                    <div id="individualFields">
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" id="name" name="name">
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone:</label>
                            <input type="tel" id="phone" name="phone">
                        </div>
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" id="email" name="email">
                        </div>
                        <div class="form-group">
                            <label for="experience">Experience:</label>
                            <input type="number" id="experience" name="experience">
                        </div>
                        <div class="form-group">
                            <label for="skills">Skills:</label>
                            <input type="text" id="skills" name="skills">
                        </div>
                        <div class="form-group">
                            <label for="country">Country:</label>
                            <input type="text" id="country" name="country">
                        </div>
                        <div class="form-group">
                            <label for="cost">Cost (hourly/Daily/Contract):</label>
                            <input type="text" id="cost" name="cost">
                        </div>
                    </div>

                    <!-- Business signup fields -->
                    <div id="businessFields" style="display: none;">
                        <div class="form-group">
                            <label for="orgName">Organization Name:</label>
                            <input type="text" id="orgName" name="orgName">
                        </div>
                        <div class="form-group">
                            <label for="orgEmail">Organization Email:</label>
                            <input type="email" id="orgEmail" name="orgEmail">
                        </div>
                        <div class="form-group">
                            <label for="orgPhone">Organization Phone:</label>
                            <input type="tel" id="orgPhone" name="orgPhone">
                        </div>
                        <div class="form-group">
                            <label for="orgAddress">Organization Address:</label>
                            <input type="text" id="orgAddress" name="orgAddress">
                        </div>
                        <div class="form-group">
                            <label for="orgCountry">Organization Country:</label>
                            <input type="text" id="orgCountry" name="orgCountry">
                        </div>
                        <div class="form-group">
                            <label for="orgState">Organization State:</label>
                            <input type="text" id="orgState" name="orgState">
                        </div>
                        <div class="form-group">
                            <label for="orgCity">Organization City:</label>
                            <input type="text" id="orgCity" name="orgCity">
                        </div>
                        <div class="form-group">
                            <label for="orgWebsite">Organization Website:</label>
                            <input type="url" id="orgWebsite" name="orgWebsite">
                        </div>
                        <div class="form-group">
                            <label for="orgHeadcount">Organization Headcount:</label>
                            <input type="number" id="orgHeadcount" name="orgHeadcount">
                        </div>
                        <div class="form-group">
                            <label for="orgIndustry">Organization Industry:</label>
                            <input type="text" id="orgIndustry" name="orgIndustry">
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Signup</button>
                    </div>
                </form>
            </section>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var businessType = document.querySelector('input[name="businessType"]:checked').value;
            showFields(businessType);

            document.querySelectorAll('input[name="businessType"]').forEach(function(radio) {
                radio.addEventListener('change', function() {
                    showFields(this.value);
                });
            });

            function showFields(type) {
                if (type === 'individual') {
                    document.getElementById('individualFields').style.display = 'block';
                    document.getElementById('businessFields').style.display = 'none';
                } else if (type === 'business') {
                    document.getElementById('individualFields').style.display = 'none';
                    document.getElementById('businessFields').style.display = 'block';
                }
            }
        });
    </script>
</body>
</html>

                   app.py new 
				   
				   
				   from flask import Flask, request, render_template, redirect, url_for, session
import mysql.connector
from mysql.connector import Error
from werkzeug.security import generate_password_hash

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Database configuration
DATABASE_CONFIG = {
    'host': 'localhost',
    'database': 'your_database_name',
    'user': 'your_username',
    'password': 'your_password'
}

# Create database connection
def create_db_connection():
    try:
        conn = mysql.connector.connect(**DATABASE_CONFIG)
        return conn
    except Error as e:
        print("Database connection failed due to {}".format(e))
        return None

# Create userinfo tables if not exists
def create_userinfo_tables():
    conn = create_db_connection()
    if conn:
        try:
            cur = conn.cursor()
            # Table for individual users
            cur.execute("""
                CREATE TABLE IF NOT EXISTS userinfo_individual (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    username VARCHAR(255) UNIQUE NOT NULL,
                    password VARCHAR(255) NOT NULL,
                    name VARCHAR(255) NOT NULL,
                    email VARCHAR(255) UNIQUE NOT NULL,
                    experience INT NOT NULL,
                    skills TEXT NOT NULL,
                    country VARCHAR(255),
                    cost VARCHAR(255)
                );
            """)
            # Table for business users
            cur.execute("""
                CREATE TABLE IF NOT EXISTS userinfo_business (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    username VARCHAR(255) UNIQUE NOT NULL,
                    password VARCHAR(255) NOT NULL,
                    org_name VARCHAR(255) NOT NULL,
                    org_email VARCHAR(255) UNIQUE NOT NULL,
                    org_phone VARCHAR(255) NOT NULL,
                    org_address VARCHAR(255),
                    org_country VARCHAR(255) NOT NULL,
                    org_state VARCHAR(255),
                    org_city VARCHAR(255),
                    org_website VARCHAR(255),
                    org_headcount INT,
                    org_industry VARCHAR(255)
                );
            """)
            conn.commit()
        except Error as e:
            print("Error creating userinfo tables: ", e)
        finally:
            if cur:
                cur.close()
            conn.close()

# Route for signup form
@app.route('/signup', methods=['GET', 'POST'])
def signup():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        business_type = request.form['businessType']

        if business_type == 'individual':
            name = request.form['name']
            phone = request.form['phone']
            email = request.form['email']
            experience = request.form['experience']
            skills = request.form['skills']
            country = request.form['country']
            cost = request.form['cost']
            org_name = None
            org_email = None
            org_phone = None
            org_address = None
            org_state = None
            org_city = None
            org_website = None
            org_headcount = None
            org_industry = None

            hashed_password = generate_password_hash(password, method='pbkdf2:sha256')

            conn = create_db_connection()
            if conn:
                try:
                    cur = conn.cursor()
                    # Insert data into individual users table
                    cur.execute("""
                        INSERT INTO userinfo_individual (username, password, name, email, experience, skills, country, cost)
                        VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
                    """, (username, hashed_password, name, email, experience, skills, country, cost))
                    conn.commit()
                    return redirect(url_for('login'))
                except Error as e:
                    print("Error inserting data into userinfo_individual: ", e)
                finally:
                    if cur:
                        cur.close()
                    conn.close()

        elif business_type == 'business':
            org_name = request.form['orgName']
            org_email = request.form['orgEmail']
            org_phone = request.form['orgPhone']
            org_address = request.form['orgAddress']
            org_country = request.form['orgCountry']
            org_state = request.form['orgState']
            org_city = request.form['orgCity']
            org_website = request.form['orgWebsite']
            org_headcount = request.form['orgHeadcount']
            org_industry = request.form['orgIndustry']

            hashed_password = generate_password_hash(password, method='pbkdf2:sha256')

            conn = create_db_connection()
            if conn:
                try:
                    cur = conn.cursor()
                    # Insert data into business users table
                    cur.execute("""
                        INSERT INTO userinfo_business (username, password, org_name, org_email, org_phone, org_address, org_country, org_state, org_city, org_website, org_headcount, org_industry)
                        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                    """, (username, hashed_password, org_name, org_email, org_phone, org_address, org_country, org_state, org_city, org_website, org_headcount, org_industry))
                    conn.commit()
                    return redirect(url_for('login'))
                except Error as e:
                    print("Error inserting data into userinfo_business: ", e)
                finally:
                    if cur:
                        cur.close()
                    conn.close()

    return render_template('signup.html')

# Ensure tables are created when the application starts
if __name__ == '__main__':
    create_userinfo_tables()
    app.run(debug=True)
